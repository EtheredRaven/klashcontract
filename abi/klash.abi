{
    "methods": {
        "get_contract_metadata": {
            "argument": "klash.get_contract_metadata_arguments",
            "return": "klash.contract_metadata",
            "description": "Get the token metadata",
            "entry-point": "0x784faa08",
            "read-only": true
        },
        "create_tournament": {
            "argument": "klash.create_tournament_arguments",
            "return": "klash.full_tournament_config",
            "description": "Create a new tournament and open sign-ups",
            "entry-point": "0xda201ca0",
            "read-only": false
        },
        "start_tournament": {
            "argument": "klash.start_tournament_arguments",
            "return": "klash.tournament_tree",
            "description": "Start the tournament",
            "entry-point": "0x73b6acc4",
            "read-only": false
        },
        "get_tournament_config": {
            "argument": "klash.get_tournament_config_arguments",
            "return": "klash.full_tournament_config",
            "description": "Get the current tournament config",
            "entry-point": "0x476695a5",
            "read-only": true
        },
        "get_tournament_tree": {
            "argument": "klash.get_tournament_tree_arguments",
            "return": "klash.tournament_tree",
            "description": "Get the current tournament tree",
            "entry-point": "0xcff2974f",
            "read-only": true
        },
        "get_waiting_players": {
            "argument": "klash.get_waiting_players_arguments",
            "return": "klash.waiting_players_rounds",
            "description": "Get the current tournament waiting players",
            "entry-point": "0xd4634018",
            "read-only": true
        },
        "get_unfinished_matches": {
            "argument": "klash.get_unfinished_matches_arguments",
            "return": "klash.uint64Array",
            "description": "Get the number of unfinished matches for each round",
            "entry-point": "0x6c8ce985",
            "read-only": true
        },
        "can_timeout_player": {
            "argument": "klash.can_timeout_player_arguments",
            "return": "klash.boolean",
            "description": "Check if a player can be timeouted",
            "entry-point": "0x193b8a5c",
            "read-only": true
        },
        "sign_up": {
            "argument": "klash.sign_up_arguments",
            "return": "klash.empty_message",
            "description": "Sign up to the current tournament",
            "entry-point": "0x7104daea",
            "read-only": false
        },
        "play_sign": {
            "argument": "klash.play_sign_arguments",
            "return": "klash.empty_message",
            "description": "Play a sign in a match as a hashed value to avoid cheating from the other player",
            "entry-point": "0xf9cac3e0",
            "read-only": false
        },
        "verify_sign": {
            "argument": "klash.verify_sign_arguments",
            "return": "klash.empty_message",
            "description": "Verify the sign after both players have sent their hashed signs",
            "entry-point": "0x7a75559c",
            "read-only": false
        },
        "timeout_player": {
            "argument": "klash.timeout_player_arguments",
            "return": "klash.empty_message",
            "description": "Timeout a player that didn't play or verify a sign in a match",
            "entry-point": "0xdb3abe2f",
            "read-only": false
        },
        "get_current_match": {
            "argument": "klash.get_current_match_arguments",
            "return": "klash.match",
            "description": "Get the current match for a specific player",
            "entry-point": "0x83d3a700",
            "read-only": true
        },
        "get_signed_up_players": {
            "argument": "klash.get_signed_up_players_arguments",
            "return": "klash.players",
            "description": "Get the current tournament players",
            "entry-point": "0xa07c1513",
            "read-only": true
        },
        "update_owner": {
            "argument": "klash.update_owner_arguments",
            "return": "klash.empty_message",
            "description": "Update the owner of the contract",
            "entry-point": "0x48bd00e9",
            "read-only": false
        }
    },
    "types": "CrYaChphc3NlbWJseS9wcm90by9rbGFzaC5wcm90bxIFa2xhc2gaFGtvaW5vcy9vcHRpb25zLnByb3RvIg8KDWVtcHR5X21lc3NhZ2UiIgoGdWludDY0EhgKBXZhbHVlGAEgASgEQgIwAVIFdmFsdWUiHwoHYm9vbGVhbhIUCgV2YWx1ZRgBIAEoCFIFdmFsdWUiKQoLdWludDY0QXJyYXkSGgoGdmFsdWVzGAEgAygEQgIwAVIGdmFsdWVzIlsKEXRvdXJuYW1lbnRfY29uZmlnEhgKBXByaXplGAEgASgEQgIwAVIFcHJpemUSLAoQc2lnbl91cF9kdXJhdGlvbhgCIAEoBEICMAFSDnNpZ25VcER1cmF0aW9uIuQBChZmdWxsX3RvdXJuYW1lbnRfY29uZmlnEicKDXRvdXJuYW1lbnRfaWQYASABKARCAjABUgx0b3VybmFtZW50SWQSOwoYdG91cm5hbWVudF9zaWduX3VwX3N0YXJ0GAIgASgEQgIwAVIVdG91cm5hbWVudFNpZ25VcFN0YXJ0EjIKFWlzX3RvdXJuYW1lbnRfc3RhcnRlZBgDIAEoCFITaXNUb3VybmFtZW50U3RhcnRlZBIwCgZjb25maWcYBCABKAsyGC5rbGFzaC50b3VybmFtZW50X2NvbmZpZ1IGY29uZmlnIi8KEWNvbnRyYWN0X21ldGFkYXRhEhoKBW93bmVyGAEgASgMQgSAtRgGUgVvd25lciJgCgZwbGF5ZXISHgoHYWRkcmVzcxgBIAEoDEIEgLUYBlIHYWRkcmVzcxI2ChVsYXN0X2FjdGlvbl90aW1lc3RhbXAYAiABKARCAjABUhNsYXN0QWN0aW9uVGltZXN0YW1wIjIKB3BsYXllcnMSJwoHcGxheWVycxgBIAMoCzINLmtsYXNoLnBsYXllclIHcGxheWVycyI7CgRzaWduEhsKCXNpZ25faGFzaBgBIAEoCVIIc2lnbkhhc2gSFgoEc2lnbhgCIAEoBEICMAFSBHNpZ24itgIKBW1hdGNoEicKB3BsYXllcjEYASABKAsyDS5rbGFzaC5wbGF5ZXJSB3BsYXllcjESJwoHcGxheWVyMhgCIAEoCzINLmtsYXNoLnBsYXllclIHcGxheWVyMhIaCgZzY29yZTEYAyABKARCAjABUgZzY29yZTESGgoGc2NvcmUyGAQgASgEQgIwAVIGc2NvcmUyEhoKBndpbm5lchgFIAEoBEICMAFSBndpbm5lchIYCgVyb3VuZBgGIAEoBEICMAFSBXJvdW5kEicKDXRvdXJuYW1lbnRfaWQYByABKARCAjABUgx0b3VybmFtZW50SWQSIQoFc2lnbjEYCCABKAsyCy5rbGFzaC5zaWduUgVzaWduMRIhCgVzaWduMhgJIAEoCzILLmtsYXNoLnNpZ25SBXNpZ24yIlwKBXJvdW5kEiYKB21hdGNoZXMYASADKAsyDC5rbGFzaC5tYXRjaFIHbWF0Y2hlcxIrCg9zdGFydF90aW1lc3RhbXAYAiABKARCAjABUg5zdGFydFRpbWVzdGFtcCI3Cg90b3VybmFtZW50X3RyZWUSJAoGcm91bmRzGAEgAygLMgwua2xhc2gucm91bmRSBnJvdW5kcyJeChZ3YWl0aW5nX3BsYXllcnNfcm91bmRzEkQKFndhaXRpbmdfcGxheWVyc19yb3VuZHMYASADKAsyDi5rbGFzaC5wbGF5ZXJzUhR3YWl0aW5nUGxheWVyc1JvdW5kcyIhCh9nZXRfY29udHJhY3RfbWV0YWRhdGFfYXJndW1lbnRzIk8KG2NyZWF0ZV90b3VybmFtZW50X2FyZ3VtZW50cxIwCgZjb25maWcYASABKAsyGC5rbGFzaC50b3VybmFtZW50X2NvbmZpZ1IGY29uZmlnIhwKGnN0YXJ0X3RvdXJuYW1lbnRfYXJndW1lbnRzIiEKH2dldF90b3VybmFtZW50X2NvbmZpZ19hcmd1bWVudHMiHwodZ2V0X3RvdXJuYW1lbnRfdHJlZV9hcmd1bWVudHMiHwodZ2V0X3dhaXRpbmdfcGxheWVyc19hcmd1bWVudHMiIgogZ2V0X3VuZmluaXNoZWRfbWF0Y2hlc19hcmd1bWVudHMiPAocY2FuX3RpbWVvdXRfcGxheWVyX2FyZ3VtZW50cxIcCgZwbGF5ZXIYASABKAxCBIC1GAZSBnBsYXllciItChFzaWduX3VwX2FyZ3VtZW50cxIYCgRmcm9tGAEgASgMQgSAtRgGUgRmcm9tIkwKE3BsYXlfc2lnbl9hcmd1bWVudHMSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbRIbCglzaWduX2hhc2gYAiABKAlSCHNpZ25IYXNoImoKFXZlcmlmeV9zaWduX2FyZ3VtZW50cxIYCgRmcm9tGAEgASgMQgSAtRgGUgRmcm9tEhIKBHNpZ24YAiABKARSBHNpZ24SIwoLcmFuZG9tX3NlZWQYAyABKARCAjABUgpyYW5kb21TZWVkIjgKGHRpbWVvdXRfcGxheWVyX2FyZ3VtZW50cxIcCgZwbGF5ZXIYASABKAxCBIC1GAZSBnBsYXllciI3ChtnZXRfY3VycmVudF9tYXRjaF9hcmd1bWVudHMSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbSIhCh9nZXRfc2lnbmVkX3VwX3BsYXllcnNfYXJndW1lbnRzIjsKFnVwZGF0ZV9vd25lcl9hcmd1bWVudHMSIQoJbmV3X293bmVyGAEgASgMQgSAtRgGUghuZXdPd25lciJRChh0b3VybmFtZW50X2NyZWF0ZWRfZXZlbnQSNQoGY29uZmlnGAEgASgLMh0ua2xhc2guZnVsbF90b3VybmFtZW50X2NvbmZpZ1IGY29uZmlnIjYKFnBsYXllcl9zaWduZWRfdXBfZXZlbnQSHAoGcGxheWVyGAEgASgMQgSAtRgGUgZwbGF5ZXIijgEKGHRvdXJuYW1lbnRfc3RhcnRlZF9ldmVudBIqCgR0cmVlGAEgASgLMhYua2xhc2gudG91cm5hbWVudF90cmVlUgR0cmVlEkYKD3dhaXRpbmdfcGxheWVycxgCIAEoCzIdLmtsYXNoLndhaXRpbmdfcGxheWVyc19yb3VuZHNSDndhaXRpbmdQbGF5ZXJzInAKEXNpZ25fcGxheWVkX2V2ZW50EhwKBnBsYXllchgBIAEoDEIEgLUYBlIGcGxheWVyEhsKCXNpZ25faGFzaBgCIAEoCVIIc2lnbkhhc2gSIAoJdGltZXN0YW1wGAMgASgEQgIwAVIJdGltZXN0YW1wIm0KE3NpZ25fdmVyaWZpZWRfZXZlbnQSHAoGcGxheWVyGAEgASgMQgSAtRgGUgZwbGF5ZXISFgoEc2lnbhgCIAEoBEICMAFSBHNpZ24SIAoJdGltZXN0YW1wGAMgASgEQgIwAVIJdGltZXN0YW1wImkKGm1hdGNoX3JvdW5kX2ZpbmlzaGVkX2V2ZW50EiIKBW1hdGNoGAEgASgLMgwua2xhc2gubWF0Y2hSBW1hdGNoEicKDHJvdW5kX3dpbm5lchgCIAEoDEIEgLUYBlILcm91bmRXaW5uZXIiOgoUbWF0Y2hfZmluaXNoZWRfZXZlbnQSIgoFbWF0Y2gYASABKAsyDC5rbGFzaC5tYXRjaFIFbWF0Y2giXQofdG91cm5hbWVudF9yb3VuZF9maW5pc2hlZF9ldmVudBIYCgVyb3VuZBgBIAEoBEICMAFSBXJvdW5kEiAKCXRpbWVzdGFtcBgCIAEoBEICMAFSCXRpbWVzdGFtcCJcCh50b3VybmFtZW50X3JvdW5kX3N0YXJ0ZWRfZXZlbnQSGAoFcm91bmQYASABKARCAjABUgVyb3VuZBIgCgl0aW1lc3RhbXAYAiABKARCAjABUgl0aW1lc3RhbXAiPQoXbmV3X21hdGNoX2NyZWF0ZWRfZXZlbnQSIgoFbWF0Y2gYASABKAsyDC5rbGFzaC5tYXRjaFIFbWF0Y2giUgoYbmV3X3BsYXllcl93YWl0aW5nX2V2ZW50EhwKBnBsYXllchgBIAEoDEIEgLUYBlIGcGxheWVyEhgKBXJvdW5kGAIgASgEQgIwAVIFcm91bmQiVAoacGxheWVyX3NraXBwZWRfcm91bmRfZXZlbnQSHAoGcGxheWVyGAEgASgMQgSAtRgGUgZwbGF5ZXISGAoFcm91bmQYAiABKARCAjABUgVyb3VuZCJaChZwbGF5ZXJfdGltZWRfb3V0X2V2ZW50EhwKBnBsYXllchgBIAEoDEIEgLUYBlIGcGxheWVyEiIKBW1hdGNoGAIgASgLMgwua2xhc2gubWF0Y2hSBW1hdGNoIj8KGXRvdXJuYW1lbnRfZmluaXNoZWRfZXZlbnQSIgoFbWF0Y2gYASABKAsyDC5rbGFzaC5tYXRjaFIFbWF0Y2hiBnByb3RvMw=="
}